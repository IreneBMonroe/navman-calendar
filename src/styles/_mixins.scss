// Dynamic font siing

@mixin font-sizing($min_font, $max_font) {

  $min_width: 576; //map-get($grid-breakpoints, sm);
  $max_width: 1200; //map-get($grid-breakpoints, xl);
  // These values represent the range of font-size to apply
  // These values effect the base font-size, headings and other elements will scale proportionally
  // $min_font: 30;
  // $max_font: 50;

  font-size: #{$min_font}px;
  // font-weight: 1200;
  // :root { font-size: #{$min_font}px; }
  // This part is a little bit ugly, I will explain what is going on in a blog post soon.
  @media (min-width: #{$min_width}px) and (max-width: #{$max_width}px){
    // :root {
    font-size: calc( #{$min_font}px + (#{$max_font} - #{$min_font}) * ( (100vw - #{$min_width}px) / ( #{$max_width} - #{$min_width}) ));
    // }
  }
  @media (min-width: #{$max_width}px){
    // :root {
    font-size: #{$max_font}px;
    // }
  }

}


@function fontsize($block, $size) {
  @if not map-has-key($fontsize, $block) {
    @warn "No palette found for `#{$block}` in $styleguide map. Property omitted.";
  }

  @return map-get(map-get($fontsize, $block), $size);
}

@function palette($palette, $tone) {
  @if not map-has-key($palettes, $palette) {
    @warn "No palette found for `#{$palette}` in $palettes map. Property omitted.";
  }

  @return map-get(map-get($palettes, $palette), $tone);
}

@mixin font-setting($size, $line-height, $family, $w){

  font-size: $size;
  line-height: #{$line-height}px;
  font-family: $family;
  font-weight: $w;
}
